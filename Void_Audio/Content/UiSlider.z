class UiSliderEvent : ZilchEvent
{
  var SliderPercentage : Real;
}

class UiSlider : ZilchComponent
{
  [Dependency] var UiWidget : UiWidget;
  [Property] var Handle : CogPath;
  
  sends UiSliderChanged : UiSliderEvent;
  
  function Initialize(init : CogInitializer)
  {
    Zero.Connect(this.Owner, Events.LeftMouseDown, this.OnLeftMouseDown);
    Zero.Connect(this.Handle.Cog, Events.MouseDragMove, this.OnMouseDragMove);
  }

  function OnLeftMouseDown(event : ViewportMouseEvent)
  {
    event.HandledEvent = true;
    this.Handle.Cog.MouseCapture.Capture(event);
    this.MoveHandleToMouse(event);
  }

  function OnMouseDragMove(event : ViewportMouseEvent)
  {
    this.MoveHandleToMouse(event);
  }
  
  function MoveHandleToMouse(event : ViewportMouseEvent)
  {
    // Bring the mouse position into local space
    var mouseWorldPos = event.ToWorldZPlane(0);
    var mousePosLocal = this.UiWidget.WorldToLocal(mouseWorldPos);
    
    var handle = this.Handle.Cog.UiWidget;
    var currHandlePos = handle.LocalTranslation;
    currHandlePos.Y = mousePosLocal.Y;
    
    // Clamp
    var max = this.UiWidget.Size.Y - handle.Size.Y;
    currHandlePos.Y = Math.Clamp(currHandlePos.Y, 0, max);
    
    // Set the final position
    handle.LocalTranslation = currHandlePos;
    
    // Send an event to for the changes
    var eventToSend = UiSliderEvent();
    eventToSend.SliderPercentage = 1.0 - (currHandlePos.Y / max);
    this.Owner.DispatchEvent(Events.UiSliderChanged, eventToSend);
  }
}
