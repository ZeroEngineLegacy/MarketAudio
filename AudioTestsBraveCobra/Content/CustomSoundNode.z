class CustomSoundNode : ZilchComponent
{
// Create and store the CustomAudioNode object
var CustomNode : CustomAudioNode = Audio.CustomAudioNode();
// Create and store the SoundBuffer object
var Buffer : SoundBuffer = Audio.SoundBuffer();

function Initialize(init : CogInitializer)
{
    // Connect to the NeedMoreSamples event of the CustomAudioNode
    Zero.Connect(this.CustomNode, Events.NeedMoreSamples, this.OnSoundEvent);
    
    // Get the minimum buffer size from the CustomAudioNode
    var bufferSize = this.CustomNode.MinimumBufferSize;
    
    // Fill the SoundBuffer with Sine wave values, scaled to 0.5
    for (var i = 0; i < bufferSize; ++i)
    {
        this.Buffer.AddSampleToBuffer(Math.Sin(2.0 * Math.Pi * 30.0 * i / bufferSize) * 0.5);
    }
    
    // Add the CustomAudioNode to the SoundSpace's SoundNode
    this.Space.SoundSpace.SoundNode.AddInputNode(this.CustomNode);
}

function OnSoundEvent(event : SoundEvent)
{
    // Send the buffer of Sine wave samples
    this.CustomNode.SendBuffer(this.Buffer);
}
}


