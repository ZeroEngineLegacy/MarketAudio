class SoundNodeGraphScript : ZilchComponent
{
    [Property]
    var Graph : CogPath;
    [Property]
    var Button : CogPath;
    
    var ObjectList : Array[Cog];
    
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Button.Cog, Events.UiButtonClicked, this.OnButtonClick);
        
        this.ObjectList = Array[Cog]();
        
        //var node = this.Space.CreateAtPosition(Archetype.Find("Node"), Real3(0,0,0));
        //node.FindChildByName("Text").SpriteText.Text = "Emitter";
        //node.UiWidget.LocalColor = Real4(0,0,0,1);
        //node.AttachTo(this.Graph.Cog);
    }
    
    function OnButtonClick(event : UiButtonEvent)
    {
      // Remove any existing node objects
      foreach(var object in this.ObjectList)
          object.Destroy();
      this.ObjectList.Clear();
      
      
      foreach(var info in Audio.GetNodeGraphInfo())
      {
          var thisPosition = Real3(info.Position.X, info.Position.Y, 0);
          //Console.WriteLine("`thisPosition`");
          
          var color = Real4(105.0/255.0, 178.0/255.0, 255.0/255.0, 1.0);
          if (info.Name == "Space")
              color = Real4(255.0/255.0, 62.0/255.0, 63.0/255.0, 1.0);
          else if (info.Name == "Listener")
              color = Real4(171.0/255.0, 105.0/255.0, 255.0/255.0, 1.0);
          else if (info.Name == "Emitter")
              color = Real4(46.0/255.0, 170.0/255.0, 43.0/255.0, 1.0);
          else if (info.Name == "SoundInstance")
              color = Real4(255.0/255.0, 167.0/255.0, 75.0/255.0, 1.0);
          else if (info.Name == "EmitterAttenuator")
              color = Real4(155.0/255.0, 255.0/255.0, 120.0/255.0, 1.0);
          else if (info.Name == "CueAttenuator")
              color = Real4(254.0/255.0, 236.0/255.0, 117.0/255.0, 1.0);
          
          var node = this.Space.CreateAtPosition(Archetype.Find("SoundNodeIcon"), thisPosition);
          node.FindChildByName("CircleHighlight").UiWidget.LocalColor = color;
          node.FindChildByName("BoxHighlight").UiWidget.LocalColor = color;
          node.FindChildByName("Text").SpriteText.Text = info.Name;
          node.AttachTo(this.Graph.Cog);
          this.ObjectList.Push(node);
          
          // Add the connection lines
          foreach(var otherInfo in info.Connections)
          {
              var otherPosition = Real3(otherInfo.Position.X, otherInfo.Position.Y + 47, 0);
              var distance = thisPosition - otherPosition;
              var linePosition = thisPosition + otherPosition;
              linePosition = linePosition / 2.0;
              
              //Console.WriteLine("`thisPosition` `otherPosition` `linePosition`");
              
              var lineArchetype = "Line";
              if (info.HasOutput == true)
                  lineArchetype = "ActiveLine";
                  
              var line = this.Space.CreateAtPosition(Archetype.Find("NodeLine"), thisPosition + Real3(0,-23,0));
              if (info.HasOutput == true)
                line.UiWidget.LocalColor = Real4(232.0/255.0, 125.0/255.0, 0.0, 1.0);
              line.AttachTo(this.Graph.Cog);
              this.ObjectList.Push(line);
              
              line.Transform.Scale = Real3(1,Math.Distance(thisPosition, otherPosition),1);
              line.Transform.RotateAnglesWorld(Real3(0.0,0.0, -Math.ATan2(distance.X, distance.Y)));
              //Console.WriteLine("`Math.Distance(thisPosition, otherPosition)`");
          }
      }
    }
}
